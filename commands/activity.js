const { SlashCommandBuilder } = require('@discordjs/builders')
const { DiscordTogether } = require('discord-together')
const { MessageActionRow, MessageSelectMenu } = require('discord.js')

module.exports = {
	data: new SlashCommandBuilder()
		.setName('activity')
		.setDescription('–ù–∞—á–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ')
		.addChannelOption((option) =>
			option
				.setName('channel')
				.setDescription('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª')
				.setRequired(true),
		),
	async execute(interaction, client) {
		const channel = interaction.options.getChannel('channel')
		client.discordTogether = new DiscordTogether(client)

		if (!interaction.member.guild.me.permissions.has('CREATE_INSTANT_INVITE')) {
			return interaction.reply({
				content: `<@${interaction.user.id}>, **–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç** —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ. **–£–±–µ–¥–∏—Ç–µ—Å—å**, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å **—Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è** ¬´–°–æ–∑–¥–æ–≤–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è¬ª!`,
				ephemeral: true,
			})
		}

		if (!channel.isVoice()) {
			return interaction
				.reply({
					content: `<@${interaction.user.id}>, **–í—ã–±—Ä–∞–Ω–Ω—ã–π** –∫–∞–Ω–∞–ª, –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å **–≥–æ–ª–æ—Å–æ–≤—ã–º!**`,
					ephemeral: true,
				})
				.catch(console.error)
		}

		const Row = (state) =>
			new MessageActionRow().addComponents(
				new MessageSelectMenu()
					.setCustomId('activity')
					.setPlaceholder('üì¨ –ù–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ!')
					.setDisabled(state)
					.addOptions([
						{
							label: 'YouTube Together',
							description:
								'–°–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ YouTube Together',
							value: 'youtube',
							emoji: '<:youtube:892459181838323752>',
						},
						{
							label: 'Poker',
							description: '–°–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ Poker Night',
							value: 'poker',
							emoji: 'üÉè',
						},
						{
							label: 'Fishing',
							description: '–°–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ Fishington.io',
							value: 'fishing',
							emoji: 'üêü',
						},
						{
							label: 'Betrayal',
							description: '–°–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å Betrayal.io',
							value: 'betrayal',
							emoji: 'üó≥Ô∏è',
						},
						{
							label: 'Chess',
							description: '–°–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ —à–∞—Ö–º–∞—Ç–∞–º–∏',
							value: 'chess',
							emoji: '‚ôüÔ∏è',
						},
						{
							label: 'Letter Tile',
							description: '–°–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å Letter Tile',
							value: 'lettertile',
							emoji: 'üÖøÔ∏è',
						},
						{
							label: 'Word Snack',
							description: '–°–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∫ –¥–µ–π—Å—Ç–≤–∏—é Word Snack',
							value: 'wordsnack',
							emoji: 'üçú',
						},
						{
							label: 'Doodle Crew',
							description: '–°–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ Doodle Crew',
							value: 'doodlecrew',
							emoji: 'üé®',
						},
					]),
			)
		const initialInteraction = await interaction.reply({
			content: '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:',
			components: [Row(false)],
			fetchReply: true,
		})

		const collector = initialInteraction.createMessageComponentCollector({
			componentType: 'SELECT_MENU',
		})

		collector.on('collect', async (i) => {
			if (i.user.id != interaction.user.id) return

			const value = i.values[0]
			switch (value) {
				case 'youtube':
					client.discordTogether
						.createTogetherCode(channel.id, value)
						.then(async (invite) => {
							await i.deferUpdate()
							return await i.editReply({
								content: `[–ù–∞–∂–º–∏—Ç–µ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ YouTube Together](${invite.code} "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ YouTube Together")`,
							})
						})
					break
				case 'poker':
					client.discordTogether
						.createTogetherCode(channel.id, value)
						.then(async (invite) => {
							await i.deferUpdate()
							return await i.editReply({
								content: `[–ù–∞–∂–º–∏—Ç–µ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ Poker Night](${invite.code} "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ Poker Night")`,
							})
						})
					break
				case 'fishing':
					client.discordTogether
						.createTogetherCode(channel.id, value)
						.then(async (invite) => {
							await i.deferUpdate()
							return await i.editReply({
								content: `[–ù–∞–∂–º–∏—Ç–µ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ Fishington.io](${invite.code} "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ fishington.io")`,
							})
						})
					break
				case 'betrayal':
					client.discordTogether
						.createTogetherCode(channel.id, value)
						.then(async (invite) => {
							await i.deferUpdate()
							return await i.editReply({
								content: `[–ù–∞–∂–º–∏—Ç–µ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ Betrayal.io](${invite.code} "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ betrayal.io")`,
							})
						})
					break
				case 'chess':
					client.discordTogether
						.createTogetherCode(channel.id, value)
						.then(async (invite) => {
							await i.deferUpdate()
							return await i.editReply({
								content: `[–ù–∞–∂–º–∏—Ç–µ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ Chess](${invite.code} "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ A game of Chess")`,
							})
						})
					break
				case 'lettertile':
					client.discordTogether
						.createTogetherCode(channel.id, value)
						.then(async (invite) => {
							await i.deferUpdate()
							return await i.editReply({
								content: `[–ù–∞–∂–º–∏—Ç–µ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ Letter tile](${invite.code} "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ A game of Letter tile")`,
							})
						})
					break
				case 'wordsnack':
					client.discordTogether
						.createTogetherCode(channel.id, value)
						.then(async (invite) => {
							await i.deferUpdate()
							return await i.editReply({
								content: `[–ù–∞–∂–º–∏—Ç–µ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ Word snack](${invite.code} "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ A game of Word snack")`,
							})
						})
					break
				case 'doodlecrew':
					client.discordTogether
						.createTogetherCode(channel.id, value)
						.then(async (invite) => {
							await i.deferUpdate()
							return await i.editReply({
								content: `[–ù–∞–∂–º–∏—Ç–µ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ Doodle Crew](${invite.code} "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ A game of Doodle Crew")`,
							})
						})
					break
			}
		})
		setTimeout(() => collector.stop('timeout'), 20000)

		collector.on('end', () => {
			if (initialInteraction) {
				initialInteraction.edit({ components: [Row(true)] })
			}
		})
	},
}
